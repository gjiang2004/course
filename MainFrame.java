
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.InetAddress;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.rmi.registry.*;
import java.rmi.*;
import java.util.*;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.UnknownHostException;
import javax.rmi.ssl.SslRMIClientSocketFactory;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;
    private RMIInterface rmiInterface;
    
    public MainFrame() throws NotBoundException, MalformedURLException, RemoteException, UnknownHostException {
        System.setProperty("javax.net.ssl.keyStore", "/Users/glen/keytest/client.jks");
        System.setProperty("javax.net.ssl.keyStorePassword", "passwd");
        System.setProperty("javax.net.ssl.trustStore", "/Users/glen/keytest/client.truststore");
        System.setProperty("javax.net.ssl.trustStorePassword", "passwd");
        System.setProperty("javax.net.debug", "ssl");
        
        Registry registry = LocateRegistry.getRegistry(InetAddress.getLocalHost().getHostName(), RMIInterface.port, new SslRMIClientSocketFactory());
        rmiInterface = (RMIInterface) registry.lookup("//localhost/CourseScheduler");
        System.err.println("lookup successful");
        
        initComponents();
        checkData();
        currentSemesterLabel.setText("None, add a semester.");
        currentStudentLabel.setText("None, add a student.");
        rebuildSemesterComboBoxes();
        rebuildSelectCoursesComboBoxes();
        rebuildCurrentStudentComboBoxes();
    }

    public void rebuildSemesterComboBoxes() throws RemoteException {
        //ArrayList<String> semesters = SemesterQueries.getSemesterList();
        ArrayList<String> semesters = null;
        try {
            semesters = rmiInterface.getSemesterList();
        } catch (RemoteException e) {
            e.printStackTrace();
        }
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            if (currentSemesterLabel.getText().equals("None, add a semester.")) {
                currentSemesterLabel.setText(semesters.get(0));
            }
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildSelectCoursesComboBoxes() {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes(currentSemesterLabel.getText());
        SelectCoursesComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        StudentDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        DCLSSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        DropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
    }
    
    public void rebuildCurrentStudentComboBoxes() {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        StudentEntry student;
        if (students.size() > 0) {
            if (currentStudentLabel.getText().equals("None, add a student.")) {
                student = students.get(0);
                currentStudentLabel.setText(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID());
            }
        } else {
            currentStudentLabel.setText("None, add a student.");
        }
        ArrayList<String> names = new ArrayList<String>();
        for(int i = 0; i < students.size(); i++) {
            String name = students.get(i).getLastName() + ", " + students.get(i).getFirstName() + " " + students.get(i).getStudentID();
            names.add(name);
        }
        currentStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(names.toArray()));
        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(names.toArray()));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        AddSemesterNameLabel = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        AddCourseCodeLabel = new javax.swing.JLabel();
        courseCodeTextfield = new javax.swing.JTextField();
        AddCourseDescriptionLabel = new javax.swing.JLabel();
        courseDescriptionTextfield = new javax.swing.JTextField();
        AddCourseSeatsLabel = new javax.swing.JLabel();
        addCourseButton = new javax.swing.JButton();
        AddCourseSeatsJSpinner = new javax.swing.JSpinner();
        AddCourseStatusLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        AddStudentIDLabel = new javax.swing.JLabel();
        AddFirstNameLabel = new javax.swing.JLabel();
        AddLastNameLabel = new javax.swing.JLabel();
        StudentIDTextfield = new javax.swing.JTextField();
        FirstNameTextfield = new javax.swing.JTextField();
        LastNameTextfield = new javax.swing.JTextField();
        AddStudentSubmitButton = new javax.swing.JButton();
        AddStudentStatusLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        DCLSSelectCourseLabel = new javax.swing.JLabel();
        DCLSSelectCourseComboBox = new javax.swing.JComboBox<>();
        DCLSDisplayButton = new javax.swing.JButton();
        DCLSScheduledStudentsLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DCLSScheduledStudentsTable = new javax.swing.JTable();
        DCLSWaitlistedStudentsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DCLSWaitlistedStudentsTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        DropStudentComboBox = new javax.swing.JComboBox<>();
        DropStudentSelectStudentLabel = new javax.swing.JLabel();
        DropStudentButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        DropStudentTextArea = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        DropCourseSelectCourseLabel = new javax.swing.JLabel();
        DropCourseComboBox = new javax.swing.JComboBox<>();
        DropCourseButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        DropCourseTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayCoursesTable = new javax.swing.JTable();
        DisplayCoursesButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        ScheduleCourseSelectCoursesLabel = new javax.swing.JLabel();
        SelectCoursesComboBox = new javax.swing.JComboBox<>();
        ScheduleCourseSubmitButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AddScheduleCourseLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        DisplayScheduleButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        StudentDropCourseLabel = new javax.swing.JLabel();
        StudentDropCourseComboBox = new javax.swing.JComboBox<>();
        StudentDropCourseButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        StudentDropCourseTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        currentStudentLabel = new javax.swing.JLabel();
        ChangeStudentButton = new javax.swing.JButton();
        currentStudentComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        AddSemesterNameLabel.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(AddSemesterNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(addSemesterSubmitButton)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddSemesterNameLabel)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Semester", jPanel3);

        AddCourseCodeLabel.setText("Course Code: ");

        courseCodeTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseCodeTextfieldActionPerformed(evt);
            }
        });

        AddCourseDescriptionLabel.setText("Course Description: ");

        courseDescriptionTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseDescriptionTextfieldActionPerformed(evt);
            }
        });

        AddCourseSeatsLabel.setText("Course Seats: ");

        addCourseButton.setText("Submit");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        AddCourseStatusLabel.setText(" ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddCourseStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(AddCourseCodeLabel)
                                .addGap(41, 41, 41)
                                .addComponent(courseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddCourseDescriptionLabel)
                                    .addComponent(AddCourseSeatsLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(courseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(AddCourseSeatsJSpinner, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(addCourseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCourseCodeLabel)
                    .addComponent(courseCodeTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCourseDescriptionLabel)
                    .addComponent(courseDescriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCourseSeatsLabel)
                    .addComponent(AddCourseSeatsJSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCourseButton)
                .addGap(18, 18, 18)
                .addComponent(AddCourseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Course", jPanel4);

        AddStudentIDLabel.setText("Student ID: ");

        AddFirstNameLabel.setText("First Name: ");

        AddLastNameLabel.setText("Last Name: ");

        StudentIDTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentIDTextfieldActionPerformed(evt);
            }
        });

        FirstNameTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameTextfieldActionPerformed(evt);
            }
        });

        AddStudentSubmitButton.setText("Submit");
        AddStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStudentSubmitButtonActionPerformed(evt);
            }
        });

        AddStudentStatusLabel.setText(" ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(AddLastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddStudentSubmitButton)
                            .addComponent(LastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddStudentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddStudentIDLabel)
                                    .addComponent(AddFirstNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(StudentIDTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                    .addComponent(FirstNameTextfield))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddStudentIDLabel)
                    .addComponent(StudentIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddFirstNameLabel)
                    .addComponent(FirstNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddLastNameLabel)
                    .addComponent(LastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(AddStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(AddStudentStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Student", jPanel5);

        DCLSSelectCourseLabel.setText("Select Course: ");

        DCLSSelectCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DCLSDisplayButton.setText("Display");
        DCLSDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DCLSDisplayButtonActionPerformed(evt);
            }
        });

        DCLSScheduledStudentsLabel.setText("Scheduled Students");

        DCLSScheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DCLSScheduledStudentsTable);

        DCLSWaitlistedStudentsLabel.setText("Waitlisted Students");

        DCLSWaitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(DCLSWaitlistedStudentsTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DCLSScheduledStudentsLabel)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(DCLSSelectCourseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(DCLSSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addComponent(DCLSDisplayButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                    .addComponent(DCLSWaitlistedStudentsLabel)
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DCLSSelectCourseLabel)
                    .addComponent(DCLSSelectCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DCLSDisplayButton))
                .addGap(18, 18, 18)
                .addComponent(DCLSScheduledStudentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DCLSWaitlistedStudentsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Display Course List of Students", jPanel9);

        DropStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropStudentSelectStudentLabel.setText("Select Student: ");

        DropStudentButton.setText("Drop Student");
        DropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropStudentButtonActionPerformed(evt);
            }
        });

        DropStudentTextArea.setColumns(20);
        DropStudentTextArea.setRows(5);
        jScrollPane5.setViewportView(DropStudentTextArea);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DropStudentSelectStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(DropStudentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DropStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DropStudentSelectStudentLabel)
                    .addComponent(DropStudentButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Student", jPanel10);

        DropCourseSelectCourseLabel.setText("Select Course to be Dropped: ");

        DropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropCourseButton.setText("Drop Course");
        DropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropCourseButtonActionPerformed(evt);
            }
        });

        DropCourseTextArea.setColumns(20);
        DropCourseTextArea.setRows(5);
        jScrollPane6.setViewportView(DropCourseTextArea);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(DropCourseSelectCourseLabel)
                        .addGap(18, 18, 18)
                        .addComponent(DropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DropCourseButton)))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DropCourseSelectCourseLabel)
                    .addComponent(DropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DropCourseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Drop Course", jPanel11);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Admin", jPanel1);

        displayCoursesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayCoursesTable);

        DisplayCoursesButton.setText("Display");
        DisplayCoursesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayCoursesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(DisplayCoursesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DisplayCoursesButton)
                .addGap(20, 20, 20))
        );

        jTabbedPane3.addTab("Display Courses", jPanel6);

        ScheduleCourseSelectCoursesLabel.setText("Select Courses: ");

        SelectCoursesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        SelectCoursesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectCoursesComboBoxActionPerformed(evt);
            }
        });

        ScheduleCourseSubmitButton.setText("Submit");
        ScheduleCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleCourseSubmitButtonActionPerformed(evt);
            }
        });

        AddScheduleCourseLabel.setText(" ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddScheduleCourseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(ScheduleCourseSubmitButton))
                            .addComponent(jLabel3)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(ScheduleCourseSelectCoursesLabel)
                                .addGap(26, 26, 26)
                                .addComponent(SelectCoursesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 580, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleCourseSelectCoursesLabel)
                    .addComponent(SelectCoursesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ScheduleCourseSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(AddScheduleCourseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Schedule Courses", jPanel7);

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(displayScheduleTable);

        DisplayScheduleButton.setText("Display");
        DisplayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 356, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addComponent(DisplayScheduleButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DisplayScheduleButton)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display Schedule", jPanel8);

        StudentDropCourseLabel.setText("Select Course: ");

        StudentDropCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        StudentDropCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDropCourseComboBoxActionPerformed(evt);
            }
        });

        StudentDropCourseButton.setText("Drop Course");
        StudentDropCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDropCourseButtonActionPerformed(evt);
            }
        });

        StudentDropCourseTextArea.setColumns(20);
        StudentDropCourseTextArea.setRows(5);
        jScrollPane7.setViewportView(StudentDropCourseTextArea);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StudentDropCourseLabel)
                        .addGap(18, 18, 18)
                        .addComponent(StudentDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(StudentDropCourseButton))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(StudentDropCourseLabel)
                        .addComponent(StudentDropCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(StudentDropCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Drop Course", jPanel12);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel4.setText("Current Student: ");

        currentStudentLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentStudentLabel.setText(" ");

        ChangeStudentButton.setText("Change Student");
        ChangeStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeStudentButtonActionPerformed(evt);
            }
        });

        currentStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(currentStudentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChangeStudentButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane3)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(currentStudentLabel)
                    .addComponent(ChangeStudentButton)
                    .addComponent(currentStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3)
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeSemesterButton)
                        .addGap(31, 31, 31)
                        .addComponent(aboutButton))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void SelectCoursesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectCoursesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectCoursesComboBoxActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        // TODO add your handling code here:
        currentSemesterLabel.setText(currentSemesterComboBox.getSelectedItem().toString());
        currentSemester = currentSemesterLabel.getText();
        rebuildSelectCoursesComboBoxes();
        rebuildCurrentStudentComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void DisplayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayScheduleButtonActionPerformed
        // TODO add your handling code here:
        
        String studentID = currentStudentLabel.getText().split(" ", 3)[2];
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        
        DefaultTableModel displayScheduleTableModel = (DefaultTableModel) displayScheduleTable.getModel();
        displayScheduleTableModel.setNumRows(0);
        Object[] rowData = new Object[2];
        
        for (ScheduleEntry se: schedule) {
            rowData[0] = se.getCourseCode();
            if(se.getStatus().equals("W")) {
                rowData[1] = "Waitlisted";
            } else {
                rowData[1] = "Scheduled";
            }
            displayScheduleTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_DisplayScheduleButtonActionPerformed

    private void DisplayCoursesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayCoursesButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<CourseEntry> courses = CourseQueries.getAllCourses(currentSemesterLabel.getText());
        DefaultTableModel displayCoursesTableModel = (DefaultTableModel) displayCoursesTable.getModel();
        
        displayCoursesTableModel.setNumRows(0);
        Object[] rowData = new Object[3];
        
        for (CourseEntry course: courses) {
            rowData[0] = course.getCourseCode();
            rowData[1] = course.getCourseDescription();
            rowData[2] = course.getSeats();
            displayCoursesTableModel.addRow(rowData);
        }
    }//GEN-LAST:event_DisplayCoursesButtonActionPerformed

    private void ScheduleCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleCourseSubmitButtonActionPerformed
        // TODO add your handling code here:
        String semester = currentSemesterLabel.getText();
        String courseCode = SelectCoursesComboBox.getSelectedItem().toString();
        String studentID = currentStudentLabel.getText().split(" ", 3)[2];
        String status = "";
        
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        
        if (CourseQueries.getCourseSeats(semester, courseCode) <= ScheduleQueries.getScheduledStudentCount(semester,courseCode)) {
            status = "W"; 
        } else {
            status = "S";
        }
        
        ScheduleEntry se = new ScheduleEntry(semester, studentID, courseCode, status, currentTimestamp);
        ScheduleQueries.addScheduleEntry(se);
        
        if(status.equals("W")) {
            AddScheduleCourseLabel.setText(currentStudentLabel.getText() + " has been waitlisted for the class");
        } else {
            AddScheduleCourseLabel.setText(currentStudentLabel.getText() + " has been scheduled for the class");
        }
    }//GEN-LAST:event_ScheduleCourseSubmitButtonActionPerformed

    private void AddStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStudentSubmitButtonActionPerformed
        // TODO add your handling code here:
        StudentEntry se = new StudentEntry(StudentIDTextfield.getText(), FirstNameTextfield.getText(), LastNameTextfield.getText());
        //StudentQueries.addStudent(se);
        try {
            rmiInterface.addStudent(se);
        } catch (RemoteException e) {
            e.printStackTrace();
        }
        AddStudentStatusLabel.setText(LastNameTextfield.getText() + ", " + FirstNameTextfield.getText() + " " + StudentIDTextfield.getText() + " has been added.");
        rebuildCurrentStudentComboBoxes();
    }//GEN-LAST:event_AddStudentSubmitButtonActionPerformed

    private void FirstNameTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstNameTextfieldActionPerformed

    private void StudentIDTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentIDTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StudentIDTextfieldActionPerformed

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
        CourseEntry ce = new CourseEntry(currentSemesterLabel.getText(), courseCodeTextfield.getText(), courseDescriptionTextfield.getText(), Integer.parseInt(AddCourseSeatsJSpinner.getValue().toString()));
        CourseQueries.addCourse(ce);
        AddCourseStatusLabel.setText(courseCodeTextfield.getText() + " has been added.");
        rebuildSelectCoursesComboBoxes();
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void courseDescriptionTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseDescriptionTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseDescriptionTextfieldActionPerformed

    private void courseCodeTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseCodeTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseCodeTextfieldActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        //SemesterQueries.addSemester(semester);
        try {
            rmiInterface.addSemester(semester);
        } catch (RemoteException e) {
            e.printStackTrace();
        }
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        try {
            rebuildSemesterComboBoxes();
        } catch (RemoteException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void DropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropStudentButtonActionPerformed
        // TODO add your handling code here:
        String student = DropStudentComboBox.getSelectedItem().toString();
        String studentID = student.split(" ", 3)[2];
        //ArrayList<String> semesterList = SemesterQueries.getSemesterList();
        ArrayList<String> semesterList = null;
        try {
            semesterList = rmiInterface.getSemesterList();
        } catch (RemoteException e) {
            e.printStackTrace();
        }
        
        DropStudentTextArea.setText("");
        DropStudentTextArea.append(student + " has been dropped from the list of students\n\n");
        StudentQueries.dropStudent(studentID);
        
        for(String semester: semesterList) {
            DropStudentTextArea.append("For Semester: " + semester + "\n");
            ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(semester, studentID);
            for(ScheduleEntry se: schedule) {
                if (se.getStatus().equals("S")) {
                    DropStudentTextArea.append(student + " has been dropped from " + se.getCourseCode() + "\n");
                    ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, se.getCourseCode());
                    ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(semester, se.getCourseCode());
                    if (waitlist.size() > 0) {
                        ScheduleEntry wstudent = waitlist.get(0);
                        ScheduleQueries.updateScheduleEntry(semester, wstudent);
                        StudentEntry wstud = StudentQueries.getStudent(wstudent.getStudentID());
                        DropStudentTextArea.append(wstud.getLastName() + ", " + wstud.getFirstName() + " " + wstud.getStudentID() + " has been scheduled into " + se.getCourseCode() + "\n");
                    }
                } else {
                    ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, se.getCourseCode());
                    DropStudentTextArea.append(currentStudentLabel.getText() + " has been dropped from the waitlist for " + se.getCourseCode() + "\n");
                }
            }
            DropStudentTextArea.append("\n");
        }
        rebuildCurrentStudentComboBoxes();
        currentStudentLabel.setText(currentStudentComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_DropStudentButtonActionPerformed

    private void ChangeStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeStudentButtonActionPerformed
        // TODO add your handling code here:
        currentStudentLabel.setText(currentStudentComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_ChangeStudentButtonActionPerformed

    private void StudentDropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDropCourseButtonActionPerformed
        // TODO add your handling code here:
        String semester = currentSemesterLabel.getText();
        String courseCode = StudentDropCourseComboBox.getSelectedItem().toString();
        String studentID = currentStudentLabel.getText().split(" ", 3)[2];
        StudentDropCourseTextArea.setText("");
        ArrayList<ScheduleEntry> se = ScheduleQueries.getScheduleByStudent(semester, studentID);
        boolean b = false;
        for(ScheduleEntry s: se) {
            if (courseCode.equals(s.getCourseCode())) {
                if (s.getStatus().equals("W")) {
                    b = true;
                }
            }
        }
        if (!b) {
            StudentDropCourseTextArea.append(currentStudentLabel.getText() + " has been dropped from " + courseCode + "\n");
            ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, courseCode);
            ArrayList<ScheduleEntry> waitlist = ScheduleQueries.getWaitlistedStudentsByCourse(semester, courseCode);
            if (waitlist.size() > 0) {
                ScheduleEntry wstudent = waitlist.get(0);
                ScheduleQueries.updateScheduleEntry(semester, wstudent);
                StudentEntry wstud = StudentQueries.getStudent(wstudent.getStudentID());
                StudentDropCourseTextArea.append(wstud.getLastName() + ", " + wstud.getFirstName() + " " + wstud.getStudentID() + " has been scheduled into " + courseCode + "\n");
            }
        } else {
            StudentDropCourseTextArea.append(currentStudentLabel.getText() + " has been dropped from the waitlist for " + courseCode + "\n");
        }
        
    }//GEN-LAST:event_StudentDropCourseButtonActionPerformed

    private void StudentDropCourseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDropCourseComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_StudentDropCourseComboBoxActionPerformed

    private void DCLSDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DCLSDisplayButtonActionPerformed
        // TODO add your handling code here:
        String semester = currentSemesterLabel.getText();
        String courseCode = DCLSSelectCourseComboBox.getSelectedItem().toString();
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(semester, courseCode);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(semester, courseCode);
        
        DefaultTableModel DCLSScheduledStudentsTableModel = (DefaultTableModel) DCLSScheduledStudentsTable.getModel();
        
        DCLSScheduledStudentsTableModel.setNumRows(0);
        Object[] rowData1 = new Object[3];
        
        for (ScheduleEntry schedule: scheduled) {
            StudentEntry se = StudentQueries.getStudent(schedule.getStudentID());
            rowData1[0] = se.getLastName();
            rowData1[1] = se.getFirstName();
            rowData1[2] = se.getStudentID();
            DCLSScheduledStudentsTableModel.addRow(rowData1);
        }
        
        DefaultTableModel DCLSWaitlistedStudentsTableModel = (DefaultTableModel) DCLSWaitlistedStudentsTable.getModel();
        
        DCLSWaitlistedStudentsTableModel.setNumRows(0);
        Object[] rowData2 = new Object[3];
        
        for (ScheduleEntry schedule: waitlisted) {
            StudentEntry se = StudentQueries.getStudent(schedule.getStudentID());
            rowData2[0] = se.getLastName();
            rowData2[1] = se.getFirstName();
            rowData2[2] = se.getStudentID();
            DCLSWaitlistedStudentsTableModel.addRow(rowData2);
        }
    }//GEN-LAST:event_DCLSDisplayButtonActionPerformed

    private void DropCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropCourseButtonActionPerformed
        // TODO add your handling code here:
        String semester = currentSemesterLabel.getText();
        String courseCode = DCLSSelectCourseComboBox.getSelectedItem().toString();
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByCourse(semester, courseCode);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByCourse(semester, courseCode);
        DropCourseTextArea.setText("");
        CourseQueries.dropCourse(semester, courseCode);
        DropCourseTextArea.append("Scheduled students dropped from the course:\n");
        
        for (ScheduleEntry se: scheduled) {
            StudentEntry student = StudentQueries.getStudent(se.getStudentID());
            DropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + "\n");
        }
        DropCourseTextArea.append("\n");
        DropCourseTextArea.append("Waitlisted students dropped from the course:\n");
        for (ScheduleEntry se: waitlisted) {
            StudentEntry student = StudentQueries.getStudent(se.getStudentID());
            DropCourseTextArea.append(student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID() + "\n");
        }
        ScheduleQueries.dropScheduleByCourse(semester, courseCode);
        rebuildSelectCoursesComboBoxes();
    }//GEN-LAST:event_DropCourseButtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (NotBoundException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (RemoteException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddCourseCodeLabel;
    private javax.swing.JLabel AddCourseDescriptionLabel;
    private javax.swing.JSpinner AddCourseSeatsJSpinner;
    private javax.swing.JLabel AddCourseSeatsLabel;
    private javax.swing.JLabel AddCourseStatusLabel;
    private javax.swing.JLabel AddFirstNameLabel;
    private javax.swing.JLabel AddLastNameLabel;
    private javax.swing.JLabel AddScheduleCourseLabel;
    private javax.swing.JLabel AddSemesterNameLabel;
    private javax.swing.JLabel AddStudentIDLabel;
    private javax.swing.JLabel AddStudentStatusLabel;
    private javax.swing.JButton AddStudentSubmitButton;
    private javax.swing.JButton ChangeStudentButton;
    private javax.swing.JButton DCLSDisplayButton;
    private javax.swing.JLabel DCLSScheduledStudentsLabel;
    private javax.swing.JTable DCLSScheduledStudentsTable;
    private javax.swing.JComboBox<String> DCLSSelectCourseComboBox;
    private javax.swing.JLabel DCLSSelectCourseLabel;
    private javax.swing.JLabel DCLSWaitlistedStudentsLabel;
    private javax.swing.JTable DCLSWaitlistedStudentsTable;
    private javax.swing.JButton DisplayCoursesButton;
    private javax.swing.JButton DisplayScheduleButton;
    private javax.swing.JButton DropCourseButton;
    private javax.swing.JComboBox<String> DropCourseComboBox;
    private javax.swing.JLabel DropCourseSelectCourseLabel;
    private javax.swing.JTextArea DropCourseTextArea;
    private javax.swing.JButton DropStudentButton;
    private javax.swing.JComboBox<String> DropStudentComboBox;
    private javax.swing.JLabel DropStudentSelectStudentLabel;
    private javax.swing.JTextArea DropStudentTextArea;
    private javax.swing.JTextField FirstNameTextfield;
    private javax.swing.JTextField LastNameTextfield;
    private javax.swing.JLabel ScheduleCourseSelectCoursesLabel;
    private javax.swing.JButton ScheduleCourseSubmitButton;
    private javax.swing.JComboBox<String> SelectCoursesComboBox;
    private javax.swing.JButton StudentDropCourseButton;
    private javax.swing.JComboBox<String> StudentDropCourseComboBox;
    private javax.swing.JLabel StudentDropCourseLabel;
    private javax.swing.JTextArea StudentDropCourseTextArea;
    private javax.swing.JTextField StudentIDTextfield;
    private javax.swing.JButton aboutButton;
    private javax.swing.JButton addCourseButton;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JTextField courseCodeTextfield;
    private javax.swing.JTextField courseDescriptionTextfield;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JComboBox<String> currentStudentComboBox;
    private javax.swing.JLabel currentStudentLabel;
    private javax.swing.JTable displayCoursesTable;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    // End of variables declaration//GEN-END:variables
}
